# Multiples of 3 and 5
# Problem 1
# If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

# Find the sum of all the multiples of 3 or 5 below 1000.

def problem_1(num)
  multiples = []
  while num >= 3
    num -= 1
    multiples << num if (num % 3 == 0) || (num % 5 == 0)
  end
  multiples.inject(:+)
end

prob1_num = 1000
puts "1. The sum of all multiples of 3 or 5 below #{prob1_num} is: #{problem_1(prob1_num)}"

# Even Fibonacci numbers
# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
